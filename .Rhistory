knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
library(tidyverse)
library(sf)
#install.packages('RSocrata')
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(tidycensus)
library(tidyr)
library(dplyr)
library(magrittr)
library(mapview)
library(caret)
library(ckanr)
library(ggcorrplot)
library(jtools)
library(stargazer)
library(broom)
library(tufte)
library(rmarkdown)
library(viridis)
library(spatstat)
library(rgdal)
# functions
root.dir = "https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/DATA/"
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
setwd("E:\\Class\\MUSA508 public policy analytics\\Final\\MUSA-508-2021-Final-JAY")
liquor <-st_read('data/Mesa_Liquor.csv')
Bar <- st_read('data/Mesa_Bars.csv')
Hospitals <- st_read('data/Mesa_Hospitals.csv')
Rehab <- st_read('data/Mesa_Rehab.csv')
#base data
##boundary:
Boundary <-st_read('https://data.mesaaz.gov/resource/qwhq-nske.geojson',crs='ESRI:102249')
##neighborhood(in census tract):
Neighborhood <-st_read('data/Mesa Census Tracts To City Boundary.geojson',crs='ESRI:102249')
##street center line:
Street <- st_read('https://data.mesaaz.gov/resource/9uib-89q3.geojson',crs='ESRI:102249')
##street light:
Stlight <- st_read('https://data.mesaaz.gov/resource/jrtd-htue.geojson',crs='ESRI:102249')
heroin_overdose_original <- st_read('https://data.mesaaz.gov/resource/qufy-tzv6.geojson',crs='ESRI:102249')
Police_incidents <-st_read('data\\Police_Incidents.csv',crs='ESRI:102249')%>%
filter(grepl('DRUG',Crime.Type))%>%
mutate(x = gsub("[()]", "", Location.1)) %>%
separate(x,into= c("Y","X"), sep=",") %>%
mutate(X = as.numeric(X),Y = as.numeric(Y)) %>%
na.omit() %>%
st_as_sf(coords = c("X", "Y"), crs = 'ESRI:102249', agr = "constant")
Drugcrime.sf<-Police_incidents%>%
dplyr::selecdt(geometry)%>%
na.omit()%>%
distinct()%>%
mutate(Legend='Drug_Crime')
Drugcrime.sf<-Police_incidents%>%
dplyr::select(geometry)%>%
na.omit()%>%
distinct()%>%
mutate(Legend='Drug_Crime')
fishnet <-
st_make_grid(Boundary,
cellsize = 0.005,
square = TRUE) %>%
.[Boundary] %>%            # <- MDH Added
st_sf() %>%
mutate(uniqueID = rownames(.))
#point data
Stlight.sf <- Stlight%>%
dplyr::select(geometry)%>%
distinct()%>%
mutate(Legend = "Stlight")
Bar.sf <- Bar%>%
st_as_sf(coords = c("LONGITUDE", "LATITUDE"), crs = 'ESRI:102249', agr = "constant")%>%
dplyr::select(geometry)%>%
na.omit()%>%
distinct()%>%
mutate(Legend = "Bar")
liquor.sf <-liquor%>%
st_as_sf(coords = c("LONGITUDE", "LATITUDE"), crs = 'ESRI:102249', agr = "constant")%>%
dplyr::select(geometry)%>%
na.omit()%>%
distinct()%>%
mutate(Legend = "Liquor")
Hospitals.sf <- Hospitals%>%
st_as_sf(coords = c("LONGITUDE", "LATITUDE"), crs = 'ESRI:102249', agr = "constant")%>%
dplyr::select(geometry)%>%
na.omit()%>%
distinct()%>%
mutate(Legend = "Hospital")
Rehab.sf<- Rehab%>%
st_as_sf(coords = c("LONGITUDE", "LATITUDE"), crs = 'ESRI:102249', agr = "constant")%>%
dplyr::select(geometry)%>%
na.omit()%>%
distinct()%>%
mutate(Legend = "Rehab")
grid.arrange(ncol=2,nrow=2,heights=(c(5,1)),widths=(c(1,1)),
ggplot() +
geom_sf(data = Boundary) +
geom_sf(data =heroin_overdose_original, colour="#d7b5d8", size=1, show.legend = "point") +
labs(title= "heroin overdose, Mesa - 2017-2021") +
mapTheme(title_size = 12),
ggplot() +
geom_sf(data = Boundary) +
stat_density2d(data = data.frame(st_coordinates(heroin_overdose_original)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 50, geom = 'polygon') +
scale_fill_viridis(option = "plasma") +
scale_alpha(range = c(0.00, 0.70), guide = FALSE) +
labs(title = "Density of Heroin Overdose") +
mapTheme(title_size = 12) + theme(legend.position = "none"))
grid.arrange(ncol=2,nrow=2,heights=(c(5,1)),widths=(c(1,1)),
ggplot() +
geom_sf(data = Boundary) +
geom_sf(data =heroin_overdose_original, colour="#7a0177", size=1, show.legend = "point") +
labs(title= "heroin overdose, Mesa - 2017-2021") +
mapTheme(title_size = 12),
ggplot() +
geom_sf(data = Boundary) +
stat_density2d(data = data.frame(st_coordinates(heroin_overdose_original)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 50, geom = 'polygon') +
scale_fill_viridis(option = "plasma") +
scale_alpha(range = c(0.00, 0.70), guide = FALSE) +
labs(title = "Density of Heroin Overdose") +
mapTheme(title_size = 12) + theme(legend.position = "none"))
grid.arrange(ncol=2,nrow=2,heights=(c(5,1)),widths=(c(1,1)),
ggplot() +
geom_sf(data = Boundary) +
geom_sf(data =heroin_overdose_original, colour="#7a0177", size=1.5, show.legend = "point") +
labs(title= "heroin overdose, Mesa - 2017-2021") +
mapTheme(title_size = 12),
ggplot() +
geom_sf(data = Boundary) +
stat_density2d(data = data.frame(st_coordinates(heroin_overdose_original)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 50, geom = 'polygon') +
scale_fill_viridis(option = "plasma") +
scale_alpha(range = c(0.00, 0.70), guide = FALSE) +
labs(title = "Density of Heroin Overdose") +
mapTheme(title_size = 12) + theme(legend.position = "none"))
overdoes_net <-
dplyr::select(heroin_overdose_original) %>%
mutate(countoverdoes = 1) %>%
aggregate(., fishnet, sum) %>%
mutate(countoverdoes = replace_na(countoverdoes, 0),
uniqueID = rownames(.),
cvID = sample(round(nrow(fishnet) / 24), size=nrow(fishnet), replace = TRUE))
ggplot() +
geom_sf(data = Boundary) +
geom_sf(data = overdoes_net, aes(fill = countoverdoes)) +
scale_fill_viridis() +
labs(title = "Count of Heroin Overdoes for the fishnet") +
mapTheme()
vars_net <-
rbind(Stlight.sf,Rehab.sf,Hospitals.sf,liquor.sf,Bar.sf,Drugcrime.sf) %>%
st_join(., fishnet, join=st_within) %>%
st_drop_geometry() %>%
group_by(uniqueID, Legend) %>%
summarize(count = n()) %>%
full_join(fishnet) %>%
spread(Legend, count, fill=0) %>%
st_sf() %>%
dplyr::select(-`<NA>`) %>%
na.omit() %>%
ungroup()
vars_net.long <-
gather(vars_net, Variable, value, -geometry, -uniqueID)
vars <- unique(vars_net.long$Variable)
mapList <- list()
for(i in vars){
mapList[[i]] <-
ggplot() +
geom_sf(data = filter(vars_net.long, Variable == i), aes(fill=value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme()}
do.call(grid.arrange,c(mapList, ncol=3, top="Risk Factors by Fishnet"))
do.call(grid.arrange,c(mapList, ncol=3, top="Risk Factors by Fishnet"))
do.call(grid.arrange,c(mapList, ncol=3, top="Risk Factors by Fishnet"))
st_c <- st_coordinates
st_coid <- st_centroid
vars_net <-
vars_net %>%
mutate(
Hospital.nn =
nn_function(st_c(st_coid(vars_net)), st_c(Hospitals.sf),3),
Stlight.nn =
nn_function(st_c(st_coid(vars_net)), st_c(Stlight.sf),3),
Rehab.nn =
nn_function(st_c(st_coid(vars_net)), st_c(Rehab.sf),3),
liquor.nn =
nn_function(st_c(st_coid(vars_net)), st_c(liquor.sf),3),
Bar.nn =
nn_function(st_c(st_coid(vars_net)), st_c(Bar.sf),3))
vars_net.long.nn <-
dplyr::select(vars_net, ends_with(".nn")) %>%
gather(Variable, value, -geometry)
vars <- unique(vars_net.long.nn$Variable)
mapList <- list()
for(i in vars){
mapList[[i]] <-
ggplot() +
geom_sf(data = filter(vars_net.long.nn, Variable == i), aes(fill=value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme()}
do.call(grid.arrange,c(mapList, ncol = 3, top = "Nearest Neighbor risk Factors by Fishnet"))
do.call(grid.arrange,c(mapList, ncol = 3, top = "Nearest Neighbor risk Factors by Fishnet"))
final_net <-
left_join(overdoes_net, st_drop_geometry(vars_net), by="uniqueID")
final_net <-
st_centroid(final_net) %>%
st_join(dplyr::select(Neiborhood, name,geoid_data)) %>%
st_drop_geometry() %>%
left_join(dplyr::select(final_net, geometry, uniqueID)) %>%
st_sf() %>%
na.omit()
final_net <-
st_centroid(final_net) %>%
st_join(dplyr::select(Neighborhood, name,geoid_data)) %>%
st_drop_geometry() %>%
left_join(dplyr::select(final_net, geometry, uniqueID)) %>%
st_sf() %>%
na.omit()
mapview::mapview(final_net, zcol = "Rehab")
final_net.nb <- poly2nb(as_Spatial(final_net), queen=TRUE)
## ... and neighborhoods to list of weigths
final_net.weights <- nb2listw(final_net.nb, style="W", zero.policy=TRUE)
local_morans <- localmoran(final_net$countoverdoes, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
final_net.localMorans <-
cbind(local_morans, as.data.frame(final_net)) %>%
st_sf() %>%
dplyr::select(countoverdoes,
Local_Morans_I = Ii,
P_Value = `Pr(z != E(Ii))`) %>%
mutate(Significant_Hotspots = ifelse(P_Value <= 0.001, 1, 0)) %>%
gather(Variable, Value, -geometry)
vars <- unique(final_net.localMorans$Variable)
varList <- list()
for(i in vars){
varList[[i]] <-
ggplot() +
geom_sf(data = filter(final_net.localMorans, Variable == i),
aes(fill = Value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme(title_size = 14) + theme(legend.position="bottom")}
do.call(grid.arrange,c(varList, ncol = 4, top = "Local Morans I statistics,overdues"))
final_net <- final_net %>%
mutate(overdues.isSig =
ifelse(local_morans[,5] <= 0.001, 1, 0)) %>%
mutate(overdoes.isSig.dist =
nn_function(st_c(st_coid(final_net)),
st_c(st_coid(filter(final_net,
overdoes.isSig == 1))),
k = 1))
final_net <- final_net %>%
mutate(overdues.isSig =
ifelse(local_morans[,5] <= 0.001, 1, 0))
final_net <- final_net %>%
mutate(overdues.isSig =
ifelse(local_morans[,5] <= 0.001, 1, 0)) %>%
mutate(overdoes.isSig.dist =
nn_function(st_c(st_coid(final_net)),
st_c(st_coid(filter(final_net,
overdoes.isSig == 1))),
k = 1))
final_net <- final_net %>%
mutate(overdues.isSig =
ifelse(local_morans[,5] <= 0.001, 1, 0)) %>%
mutate(overdoes.isSig.dist =
nn_function(st_c(st_coid(final_net)),
st_c(st_coid(filter(final_net,
overdoes.isSig = 1))),
k = 1))
final_net <- final_net %>%
mutate(overdues.isSig =
ifelse(local_morans[,5] <= 0.001, 1, 0))
View(final_net)
nn_function(st_c(st_coid(final_net)),
st_c(st_coid(filter(final_net,overdoes.isSig == 1)))
final_net <- final_net %>%
final_net <- final_net %>%
mutate(overdues.isSig =
ifelse(local_morans[,5] <= 0.001, 1, 0)) %>%
mutate(overdoes.isSig.dist =
nn_function(st_c(st_coid(final_net)),
st_c(st_coid(filter(final_net, overdoes.isSig == 1))), 1))
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
library(tidyverse)
library(sf)
#install.packages('RSocrata')
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(tidycensus)
library(tidyr)
library(dplyr)
library(magrittr)
library(mapview)
library(caret)
library(ckanr)
library(ggcorrplot)
library(jtools)
library(stargazer)
library(broom)
library(tufte)
library(rmarkdown)
library(viridis)
library(spatstat)
library(rgdal)
# functions
root.dir = "https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/DATA/"
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
final_net <- final_net %>%
mutate(overdues.isSig =
ifelse(local_morans[,5] <= 0.001, 1, 0)) %>%
mutate(overdues.isSig.dist =
nn_function(st_c(st_coid(final_net)),
st_c(st_coid(filter(final_net,
overdues.isSig == 1))),
k = 1))
final_net <- final_net %>%
mutate(overdues.isSig =
ifelse(local_morans[,5] <= 0.001, 1, 0)) %>%
mutate(overdues.isSig.dist =
nn_function(st_c(st_coid(final_net)),
st_c(st_coid(filter(final_net,
overdues.isSig == 1))),
k = 1))
View(final_net)
final_net <- final_net %>%
mutate(overdoes.isSig =
ifelse(local_morans[,5] <= 0.001, 1, 0)) %>%
mutate(overdues.isSig.dist =
nn_function(st_c(st_coid(final_net)),
st_c(st_coid(filter(final_net,
overdoes.isSig == 1))),
k = 1))
View(vars_net)
final_net <-
left_join(overdoes_net, st_drop_geometry(vars_net), by="uniqueID")
final_net <-
st_centroid(final_net) %>%
st_join(dplyr::select(Neighborhood, name,geoid_data)) %>%
st_drop_geometry() %>%
left_join(dplyr::select(final_net, geometry, uniqueID)) %>%
st_sf() %>%
na.omit()
final_net.nb <- poly2nb(as_Spatial(final_net), queen=TRUE)
## ... and neighborhoods to list of weigths
final_net.weights <- nb2listw(final_net.nb, style="W", zero.policy=TRUE)
local_morans <- localmoran(final_net$countoverdoes, final_net.weights, zero.policy=TRUE) %>%
as.data.frame()
final_net.localMorans <-
cbind(local_morans, as.data.frame(final_net)) %>%
st_sf() %>%
dplyr::select(countoverdoes,
Local_Morans_I = Ii,
P_Value = `Pr(z != E(Ii))`) %>%
mutate(Significant_Hotspots = ifelse(P_Value <= 0.001, 1, 0)) %>%
gather(Variable, Value, -geometry)
vars <- unique(final_net.localMorans$Variable)
varList <- list()
for(i in vars){
varList[[i]] <-
ggplot() +
geom_sf(data = filter(final_net.localMorans, Variable == i),
aes(fill = Value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme(title_size = 14) + theme(legend.position="bottom")}
do.call(grid.arrange,c(varList, ncol = 4, top = "Local Morans I statistics,overdoes"))
final_net <- final_net %>%
mutate(overdoes.isSig =
ifelse(local_morans[,5] <= 0.001, 1, 0)) %>%
mutate(overdues.isSig.dist =
nn_function(st_c(st_coid(final_net)),
st_c(st_coid(filter(final_net,
overdoes.isSig == 1))),
k = 1))
final_net <- final_net %>%
mutate(overdoes.isSig =
ifelse(local_morans[,5] <= 0.001, 1, 0)) %>%
mutate(overdoes.isSig.dist =
nn_function(st_c(st_coid(final_net)),
st_c(st_coid(filter(final_net,
overdoes.isSig == 1))),
k = 1))
final_net <- final_net%>%
dplyr::select(-overdues.isSig.dist)
ggplot() +
geom_sf(data = final_net, aes(fill=overdoes.isSig.dist), colour=NA) +
scale_fill_viridis(name="NN Distance") +
labs(title="Overdues NN Distance") +
mapTheme()
correlation.long <-
st_drop_geometry(final_net) %>%
dplyr::select(-uniqueID, -cvID, -name, -geoid_data) %>%
gather(Variable, Value, -countoverdoes)
correlation.cor <-
correlation.long %>%
group_by(Variable) %>%
summarize(correlation = cor(Value, countoverdoes, use = "complete.obs"))
ggplot(correlation.long, aes(Value, countoverdoes)) +
geom_point(size = 1,color="#7a0177")
ggplot(correlation.long, aes(Value, countoverdoes)) +
geom_point(size = 3,color="#7a0177") +
geom_text(data = correlation.cor, aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -.1)
ggplot(correlation.long, aes(Value, countoverdoes)) +
geom_point(size = 3,color="#7a0177") +
geom_text(data = correlation.cor, aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -.1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 2, scales = "free") +
labs(title = "Narcotics Arrests as a function of risk factors") +
plotTheme()
ggplot(correlation.long, aes(Value, countoverdoes)) +
geom_point(size = 3,color="#7a0177") +
geom_text(data = correlation.cor,
aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -1)
ggplot(correlation.long, aes(Value, countoverdoes)) +
geom_point(size = 3,color="#7a0177") +
geom_text(data = correlation.cor,
aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 2, scales = "free") +
labs(title = "Narcotics Arrests as a function of risk factors") +
plotTheme()
ggplot(correlation.long, aes(Value, countoverdoes)) +
geom_point(size = 3,color="#7a0177") +
geom_text(data = correlation.cor,
aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 2, scales = "free") +
labs(title = "Narcotics Arrests as a function of risk factors") +
plotTheme()
ggplot(correlation.long, aes(Value, countoverdoes)) +
geom_point(size = 3,color="#7a0177") +
geom_text(data = correlation.cor,
aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 2, scales = "free") +
labs(title = "Narcotics Arrests as a function of risk factors") +
plotTheme()
ggplot(correlation.long, aes(Value, countoverdoes)) +
geom_point(size = 1.5,color="#7a0177") +
geom_text(data = correlation.cor,
aes(label = paste("r =", round(correlation, 2))),
x=-Inf, y=Inf, vjust = 1.5, hjust = -1) +
geom_smooth(method = "lm", se = FALSE, colour = "black") +
facet_wrap(~Variable, ncol = 2, scales = "free") +
labs(title = "Narcotics Arrests as a function of risk factors") +
plotTheme()
ggplot()
ggplot()+the_geom()
ggplot()+the_geom(Boundary)
ggplot() +
geom_sf(data = Boundary)
ggplot() +
geom_sf(data = Boundary) +
geom_sf(data = heroin_overdose_original)
ggplot() +
geom_sf(data = Neighborhood)
